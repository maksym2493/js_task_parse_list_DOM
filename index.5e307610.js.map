{"mappings":"ICekB,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAmBlB,AAbA,SAAoB,CAAe,EAIjC,IAAK,I,E,S,C,EACH,IAAM,EAAW,EAAU,IAAI,CAC7B,SAAC,CADH,EACU,OAAA,EAAG,WAAW,CAAC,IAAI,KAAO,CAAe,CAAC,EAAE,CAAC,IAAI,A,GAG3D,EAAK,OAAO,CAAC,EACf,EATM,EAAO,SAAS,aAAa,CAAC,MAC9B,EAAa,EAAG,EAAK,gBAAgB,CAAC,OAEnC,EAAI,EAAgB,MAAM,CAAG,EAAG,GAAK,EAAG,IAAjD,EAAA,EAOF,GAjBkB,EAVR,EAAG,AAFE,SAAS,aAAa,CAAC,MAEpB,gBAAgB,CAAC,OAAO,GAAG,CAAC,SAAC,CAA7C,EACE,MAAO,CACL,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,CAAC,EAAS,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,IAAK,IAC1D,IAAK,CAAC,EAAS,OAAO,CAAC,GAAG,AAC5B,CACF,GAIQ,EAAG,GAAW,IAAI,CACxB,SAAC,CAAA,CAAW,CADd,EAC4B,OAAA,EAAU,MAAM,CAAG,EAAU,MAAM,A","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction getEmployees() {\n    var list = document.querySelector(\"ul\");\n    return _to_consumable_array(list.querySelectorAll(\"li\")).map(function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: +employee.dataset.salary.slice(1).replaceAll(\",\", \"\"),\n            age: +employee.dataset.age\n        };\n    });\n}\nfunction sortList(employees) {\n    return _to_consumable_array(employees).sort(function(employeeA, employeeB) {\n        return employeeB.salary - employeeA.salary;\n    });\n}\nfunction updateList(sortedEmployees) {\n    var _loop = function(i) {\n        var employee = employees.find(function(li) {\n            return li.textContent.trim() === sortedEmployees[i].name;\n        });\n        list.prepend(employee);\n    };\n    var list = document.querySelector(\"ul\");\n    var employees = _to_consumable_array(list.querySelectorAll(\"li\"));\n    for(var i = sortedEmployees.length - 1; i >= 0; i--)_loop(i);\n}\nupdateList(sortList(getEmployees()));\n\n//# sourceMappingURL=index.5e307610.js.map\n","'use strict';\n\nfunction getEmployees() {\n  const list = document.querySelector('ul');\n\n  return [...list.querySelectorAll('li')].map((employee) => {\n    return {\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: +employee.dataset.salary.slice(1).replaceAll(',', ''),\n      age: +employee.dataset.age,\n    };\n  });\n}\n\nfunction sortList(employees) {\n  return [...employees].sort(\n    (employeeA, employeeB) => employeeB.salary - employeeA.salary,\n  );\n}\n\nfunction updateList(sortedEmployees) {\n  const list = document.querySelector('ul');\n  const employees = [...list.querySelectorAll('li')];\n\n  for (let i = sortedEmployees.length - 1; i >= 0; i--) {\n    const employee = employees.find(\n      (li) => li.textContent.trim() === sortedEmployees[i].name,\n    );\n\n    list.prepend(employee);\n  }\n}\n\nupdateList(sortList(getEmployees()));\n"],"names":["employees","_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","updateList","sortedEmployees","_loop","employee","find","li","textContent","trim","list","prepend","document","querySelector","querySelectorAll","map","position","dataset","salary","replaceAll","age","sort","employeeA","employeeB"],"version":3,"file":"index.5e307610.js.map"}